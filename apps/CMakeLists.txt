if(IVW_QT_APPLICATION OR IVW_TINY_QT_APPLICATION)
    if(DESIRED_QT_VERSION MATCHES 5)
		find_package(Qt5Core QUIET REQUIRED)
        find_package(Qt5Gui QUIET REQUIRED)
        find_package(Qt5Widgets QUIET REQUIRED)
		if(IVW_QT_APPLICATION)
			find_package(Qt5Help QUIET REQUIRED)
		endif()		
    else()
        find_package(Qt QUIET REQUIRED)
    endif()	
 
    if(DESIRED_QT_VERSION MATCHES 5)
        qt5_wrap_cpp(MOC_FILES ${MOC_FILES})    
    else()
        qt4_wrap_cpp(MOC_FILES ${MOC_FILES})
    endif()
    
    set(QT_DONT_USE_QTCORE FALSE)
    set(QT_DONT_USE_QTGUI FALSE)
    set(QT_USE_QT3SUPPORT FALSE)
    set(QT_USE_QTASSISTANT FALSE)
    set(QT_USE_QTDESIGNER FALSE)
    set(QT_USE_QTMOTIF FALSE)
    set(QT_USE_QTMAIN FALSE)
    set(QT_USE_QTNETWORK FALSE)
    set(QT_USE_QTNSPLUGIN FALSE)
if(IVW_MODULE_OPENGLQT)
    set(QT_USE_QTOPENGL TRUE)
endif()
    set(QT_USE_QTSQL FALSE)
    set(QT_USE_QTXML FALSE)
    set(QT_USE_QTSVG FALSE)
    set(QT_USE_QTTEST FALSE)
    set(QT_USE_QTUITOOLS FALSE)
    set(QT_USE_QTDBUS FALSE)
    set(QT_USE_QTSCRIPT FALSE)
    set(QT_USE_QTASSISTANTCLIENT FALSE)
if(IVW_QT_APPLICATION)
    set(QT_USE_QTHELP TRUE)
else()
	set(QT_USE_QTHELP FALSE)
endif()
    set(QT_USE_QTWEBKIT FALSE)
    set(QT_USE_QTXMLPATTERNS FALSE)
    set(QT_USE_PHONON FALSE)
endif()

add_minimal_applications()

if(IVW_UNIT_TEST_APPLICATION)
    add_subdirectory(unittests)
endif()

if(IVW_QT_APPLICATION)
    add_subdirectory(inviwo)
endif()